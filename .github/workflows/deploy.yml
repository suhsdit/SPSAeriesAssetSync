name: SPSAeriesAssetSync

on:
  push:
    branches: [main, dev]

env:
  major: 0
  minor: 2
  patch: ${{ github.run_number }}
  buildVer: 0.2.${{ github.run_number }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run build script
      env:
        buildVer: ${{ env.buildVer }}
      run: pwsh -File ./build.ps1

    - name: Run Pester tests
      shell: pwsh
      run: |
        Install-Module -Name Pester -Force
        Invoke-Pester -Script "./Tests/1. Module Tests/SPSAeriesAssetSync.Module.Tests.ps1" -OutputFile "./Tests/1. Module Tests/SPSAeriesAssetSync.Module.Tests.XML" -OutputFormat NUnitXml -EnableExit $true

    - name: Publish test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ./Tests/1. Module Tests/SPSAeriesAssetSync.Module.Tests.XML
      
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run build script
      env:
        buildVer: ${{ env.buildVer }}
      run: pwsh -File ./build.ps1
  
    - name: Install dependencies
      shell: pwsh
      run: |
        Install-Module -Name AeriesAPI -Force
        Install-Module -Name SPSAeries -Force
        Install-Module -Name PSGSuite -Force

    
    - name: Publish Module to PSGallery
      shell: pwsh
      run: |
        $PSGalleryApiKey = '${{ secrets.SPSAERIESASSETSYNC_NUGET_API_KEY }}'
        Install-Module -Name PowerShellGet -Force
        Publish-Module -Path ./SPSAeriesAssetSync -Repository PSGallery -NuGetApiKey $PSGalleryApiKey